/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lamelltelas;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lamell.Conexao;
/**
 *
 * @author vinic
 */
public class TelaClientes extends javax.swing.JFrame {

    /**
     * Creates new form TelaClientes
     */
    public TelaClientes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BtnMenu = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        BtnAdicionar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        BtnConsultar = new javax.swing.JButton();
        TxtConsultar = new javax.swing.JTextField();
        BtnAtualizar = new javax.swing.JButton();
        BtnExcluir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Clientes");

        BtnMenu.setBackground(new java.awt.Color(255, 204, 255));
        BtnMenu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnMenu.setText("Menu");
        BtnMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMenuActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/baby.png"))); // NOI18N

        BtnAdicionar.setBackground(new java.awt.Color(255, 204, 255));
        BtnAdicionar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnAdicionar.setText("Adicionar");
        BtnAdicionar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAdicionarActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        BtnConsultar.setBackground(new java.awt.Color(255, 204, 255));
        BtnConsultar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnConsultar.setText("Consultar");
        BtnConsultar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnConsultarActionPerformed(evt);
            }
        });

        BtnAtualizar.setBackground(new java.awt.Color(255, 204, 255));
        BtnAtualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnAtualizar.setText("Atualizar");
        BtnAtualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAtualizarActionPerformed(evt);
            }
        });

        BtnExcluir.setBackground(new java.awt.Color(255, 0, 0));
        BtnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        BtnExcluir.setText("Excluir");
        BtnExcluir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExcluirActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Nome:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TxtConsultar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnConsultar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BtnAtualizar)
                                .addGap(18, 18, 18)
                                .addComponent(BtnExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BtnMenu)
                                .addGap(18, 18, 18)
                                .addComponent(BtnAdicionar)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnConsultar)
                    .addComponent(TxtConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnAdicionar)
                    .addComponent(BtnAtualizar)
                    .addComponent(BtnExcluir)
                    .addComponent(BtnMenu))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMenuActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            new TelaPrincipal().setVisible(true);
        });
         this.dispose();
    }//GEN-LAST:event_BtnMenuActionPerformed

    private void BtnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAtualizarActionPerformed
int linha = jTable2.getSelectedRow();
    if (linha == -1) {
        JOptionPane.showMessageDialog(this, "Selecione uma linha para atualizar.");
        return;
    }

 
    if (jTable2.isEditing()) {
        jTable2.getCellEditor().stopCellEditing();
    }

    try {
        int id = Integer.parseInt(jTable2.getValueAt(linha, 0).toString());
        String nome = jTable2.getValueAt(linha, 1).toString();
        String endereco = jTable2.getValueAt(linha, 2).toString();
        String telefone = jTable2.getValueAt(linha, 3).toString();

        Conexao conexao = new Conexao();
        if (conexao.conectar()) {
            String sql = "UPDATE clientes SET nome = ?, endereco = ?, telefone = ? WHERE id = ?";
            PreparedStatement stmt = conexao.getConnection().prepareStatement(sql);
            stmt.setString(1, nome);
            stmt.setString(2, endereco);
            stmt.setString(3, telefone);
            stmt.setInt(4, id);

            int resultado = stmt.executeUpdate();

            if (resultado > 0) {
                JOptionPane.showMessageDialog(this, "Cliente atualizado com sucesso!");
               
            } else {
                JOptionPane.showMessageDialog(this, "Nenhum registro foi atualizado.");
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
    }        
    }//GEN-LAST:event_BtnAtualizarActionPerformed

    private void BtnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAdicionarActionPerformed
       java.awt.EventQueue.invokeLater(() -> {
            new CadastroClientes().setVisible(true);
        });
       
    }//GEN-LAST:event_BtnAdicionarActionPerformed

    private void BtnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnConsultarActionPerformed
        String categoriaBusca = TxtConsultar.getText();
try {
    Conexao conexao = new Conexao();
    if (conexao.conectar()) {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nome");
        modelo.addColumn("Endereço");
        modelo.addColumn("Telefone");

      String sql = "SELECT * FROM clientes WHERE nome LIKE ?";
            PreparedStatement stmt = conexao.getConnection().prepareStatement(sql);
            stmt.setString(1, "%" + categoriaBusca + "%");

            ResultSet rs = stmt.executeQuery();
        while (rs.next()) {
            modelo.addRow(new Object[]{
                rs.getInt("id"),
                rs.getString("nome"),
                rs.getString("endereco"),
                rs.getString("telefone")
            });
        }

        jTable2.setModel(modelo);
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Erro ao consultar: " + e.getMessage());
}
    }//GEN-LAST:event_BtnConsultarActionPerformed

    private void BtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExcluirActionPerformed
      int linha = jTable2.getSelectedRow();
if (linha == -1) {
    JOptionPane.showMessageDialog(this, "Selecione um cliente para excluir.");
    return;
}

int idCliente = Integer.parseInt(jTable2.getValueAt(linha, 0).toString());

try {
    Conexao conexao = new Conexao();
    if (conexao.conectar()) {
       
        String sqlCheck = "SELECT COUNT(*) FROM pedidos WHERE FK_cliente_id = ?";
        PreparedStatement checkStmt = conexao.getConnection().prepareStatement(sqlCheck);
        checkStmt.setInt(1, idCliente);
        ResultSet rs = checkStmt.executeQuery();

        boolean temPedidos = false;
        if (rs.next() && rs.getInt(1) > 0) {
            temPedidos = true;
        }

        int confirm;
        if (temPedidos) {
            confirm = JOptionPane.showConfirmDialog(this,
                "Este cliente possui pedidos vinculados.\nDeseja excluir o cliente e todos os pedidos relacionados?",
                "Confirmação",
                JOptionPane.YES_NO_OPTION);
        } else {
            confirm = JOptionPane.showConfirmDialog(this,
                "Deseja excluir o cliente selecionado?",
                "Confirmação",
                JOptionPane.YES_NO_OPTION);
        }

        if (confirm == JOptionPane.YES_OPTION) {
            if (temPedidos) {
               
                String sqlDeletePedidos = "DELETE FROM pedidos WHERE FK_cliente_id = ?";
                PreparedStatement deletePedidos = conexao.getConnection().prepareStatement(sqlDeletePedidos);
                deletePedidos.setInt(1, idCliente);
                deletePedidos.executeUpdate();
            }

           
            String sqlDeleteCliente = "DELETE FROM clientes WHERE id = ?";
            PreparedStatement deleteCliente = conexao.getConnection().prepareStatement(sqlDeleteCliente);
            deleteCliente.setInt(1, idCliente);
            deleteCliente.executeUpdate();

            JOptionPane.showMessageDialog(this, "Cliente e pedidos relacionados,excluídos com sucesso!");
            BtnConsultar.doClick(); 
        }

    } else {
        JOptionPane.showMessageDialog(this, "Falha ao conectar ao banco de dados.");
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Erro ao excluir: " + e.getMessage());
}
    }//GEN-LAST:event_BtnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdicionar;
    private javax.swing.JButton BtnAtualizar;
    private javax.swing.JButton BtnConsultar;
    private javax.swing.JButton BtnExcluir;
    private javax.swing.JButton BtnMenu;
    private javax.swing.JTextField TxtConsultar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
